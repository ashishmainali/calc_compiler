Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> ID ASSIGN expression
Rule 2     statement -> expression
Rule 3     expression -> expression DIVIDE expression
Rule 4     expression -> expression EXPONENTIATION expression
Rule 5     expression -> expression MINUS expression
Rule 6     expression -> expression MODULUS expression
Rule 7     expression -> expression MULTIPLY expression
Rule 8     expression -> expression OR expression
Rule 9     expression -> expression XOR expression
Rule 10    expression -> expression AND expression
Rule 11    expression -> expression RANDOM expression
Rule 12    expression -> expression PLUS expression
Rule 13    expression -> MINUS expression
Rule 14    expression -> PLUS expression
Rule 15    expression -> NOT expression
Rule 16    expression -> expression FACTORIAL
Rule 17    expression -> expression SQUARE_ROOT
Rule 18    expression -> LPAREN expression RPAREN
Rule 19    expression -> INTEGER
Rule 20    expression -> REAL
Rule 21    expression -> ID

Terminals, with rules where they appear

AND                  : 10
ASSIGN               : 1
DIVIDE               : 3
EXPONENTIATION       : 4
FACTORIAL            : 16
ID                   : 1 21
INTEGER              : 19
LPAREN               : 18
MINUS                : 5 13
MODULUS              : 6
MULTIPLY             : 7
NOT                  : 15
OR                   : 8
PLUS                 : 12 14
RANDOM               : 11
REAL                 : 20
RPAREN               : 18
SQUARE_ROOT          : 17
XOR                  : 9
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 14 15 16 17 18
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . ID ASSIGN expression
    (2) statement -> . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    ID              shift and go to state 2
    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9

    statement                      shift and go to state 1
    expression                     shift and go to state 3

state 1

    (0) S' -> statement .



state 2

    (1) statement -> ID . ASSIGN expression
    (21) expression -> ID .

    ASSIGN          shift and go to state 10
    DIVIDE          reduce using rule 21 (expression -> ID .)
    EXPONENTIATION  reduce using rule 21 (expression -> ID .)
    MINUS           reduce using rule 21 (expression -> ID .)
    MODULUS         reduce using rule 21 (expression -> ID .)
    MULTIPLY        reduce using rule 21 (expression -> ID .)
    OR              reduce using rule 21 (expression -> ID .)
    XOR             reduce using rule 21 (expression -> ID .)
    AND             reduce using rule 21 (expression -> ID .)
    RANDOM          reduce using rule 21 (expression -> ID .)
    PLUS            reduce using rule 21 (expression -> ID .)
    FACTORIAL       reduce using rule 21 (expression -> ID .)
    SQUARE_ROOT     reduce using rule 21 (expression -> ID .)
    $end            reduce using rule 21 (expression -> ID .)


state 3

    (2) statement -> expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    $end            reduce using rule 2 (statement -> expression .)
    DIVIDE          shift and go to state 11
    EXPONENTIATION  shift and go to state 12
    MINUS           shift and go to state 13
    MODULUS         shift and go to state 14
    MULTIPLY        shift and go to state 15
    OR              shift and go to state 16
    XOR             shift and go to state 17
    AND             shift and go to state 18
    RANDOM          shift and go to state 19
    PLUS            shift and go to state 20
    FACTORIAL       shift and go to state 21
    SQUARE_ROOT     shift and go to state 22


state 4

    (13) expression -> MINUS . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 23

state 5

    (14) expression -> PLUS . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 25

state 6

    (15) expression -> NOT . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 26

state 7

    (18) expression -> LPAREN . expression RPAREN
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 27

state 8

    (19) expression -> INTEGER .

    DIVIDE          reduce using rule 19 (expression -> INTEGER .)
    EXPONENTIATION  reduce using rule 19 (expression -> INTEGER .)
    MINUS           reduce using rule 19 (expression -> INTEGER .)
    MODULUS         reduce using rule 19 (expression -> INTEGER .)
    MULTIPLY        reduce using rule 19 (expression -> INTEGER .)
    OR              reduce using rule 19 (expression -> INTEGER .)
    XOR             reduce using rule 19 (expression -> INTEGER .)
    AND             reduce using rule 19 (expression -> INTEGER .)
    RANDOM          reduce using rule 19 (expression -> INTEGER .)
    PLUS            reduce using rule 19 (expression -> INTEGER .)
    FACTORIAL       reduce using rule 19 (expression -> INTEGER .)
    SQUARE_ROOT     reduce using rule 19 (expression -> INTEGER .)
    $end            reduce using rule 19 (expression -> INTEGER .)
    RPAREN          reduce using rule 19 (expression -> INTEGER .)


state 9

    (20) expression -> REAL .

    DIVIDE          reduce using rule 20 (expression -> REAL .)
    EXPONENTIATION  reduce using rule 20 (expression -> REAL .)
    MINUS           reduce using rule 20 (expression -> REAL .)
    MODULUS         reduce using rule 20 (expression -> REAL .)
    MULTIPLY        reduce using rule 20 (expression -> REAL .)
    OR              reduce using rule 20 (expression -> REAL .)
    XOR             reduce using rule 20 (expression -> REAL .)
    AND             reduce using rule 20 (expression -> REAL .)
    RANDOM          reduce using rule 20 (expression -> REAL .)
    PLUS            reduce using rule 20 (expression -> REAL .)
    FACTORIAL       reduce using rule 20 (expression -> REAL .)
    SQUARE_ROOT     reduce using rule 20 (expression -> REAL .)
    $end            reduce using rule 20 (expression -> REAL .)
    RPAREN          reduce using rule 20 (expression -> REAL .)


state 10

    (1) statement -> ID ASSIGN . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 28

state 11

    (3) expression -> expression DIVIDE . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 29

state 12

    (4) expression -> expression EXPONENTIATION . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 30

state 13

    (5) expression -> expression MINUS . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 31

state 14

    (6) expression -> expression MODULUS . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 32

state 15

    (7) expression -> expression MULTIPLY . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 33

state 16

    (8) expression -> expression OR . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 34

state 17

    (9) expression -> expression XOR . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 35

state 18

    (10) expression -> expression AND . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 36

state 19

    (11) expression -> expression RANDOM . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 37

state 20

    (12) expression -> expression PLUS . expression
    (3) expression -> . expression DIVIDE expression
    (4) expression -> . expression EXPONENTIATION expression
    (5) expression -> . expression MINUS expression
    (6) expression -> . expression MODULUS expression
    (7) expression -> . expression MULTIPLY expression
    (8) expression -> . expression OR expression
    (9) expression -> . expression XOR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression RANDOM expression
    (12) expression -> . expression PLUS expression
    (13) expression -> . MINUS expression
    (14) expression -> . PLUS expression
    (15) expression -> . NOT expression
    (16) expression -> . expression FACTORIAL
    (17) expression -> . expression SQUARE_ROOT
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . REAL
    (21) expression -> . ID

    MINUS           shift and go to state 4
    PLUS            shift and go to state 5
    NOT             shift and go to state 6
    LPAREN          shift and go to state 7
    INTEGER         shift and go to state 8
    REAL            shift and go to state 9
    ID              shift and go to state 24

    expression                     shift and go to state 38

state 21

    (16) expression -> expression FACTORIAL .

    DIVIDE          reduce using rule 16 (expression -> expression FACTORIAL .)
    EXPONENTIATION  reduce using rule 16 (expression -> expression FACTORIAL .)
    MINUS           reduce using rule 16 (expression -> expression FACTORIAL .)
    MODULUS         reduce using rule 16 (expression -> expression FACTORIAL .)
    MULTIPLY        reduce using rule 16 (expression -> expression FACTORIAL .)
    OR              reduce using rule 16 (expression -> expression FACTORIAL .)
    XOR             reduce using rule 16 (expression -> expression FACTORIAL .)
    AND             reduce using rule 16 (expression -> expression FACTORIAL .)
    RANDOM          reduce using rule 16 (expression -> expression FACTORIAL .)
    PLUS            reduce using rule 16 (expression -> expression FACTORIAL .)
    FACTORIAL       reduce using rule 16 (expression -> expression FACTORIAL .)
    SQUARE_ROOT     reduce using rule 16 (expression -> expression FACTORIAL .)
    $end            reduce using rule 16 (expression -> expression FACTORIAL .)
    RPAREN          reduce using rule 16 (expression -> expression FACTORIAL .)


state 22

    (17) expression -> expression SQUARE_ROOT .

    DIVIDE          reduce using rule 17 (expression -> expression SQUARE_ROOT .)
    EXPONENTIATION  reduce using rule 17 (expression -> expression SQUARE_ROOT .)
    MINUS           reduce using rule 17 (expression -> expression SQUARE_ROOT .)
    MODULUS         reduce using rule 17 (expression -> expression SQUARE_ROOT .)
    MULTIPLY        reduce using rule 17 (expression -> expression SQUARE_ROOT .)
    OR              reduce using rule 17 (expression -> expression SQUARE_ROOT .)
    XOR             reduce using rule 17 (expression -> expression SQUARE_ROOT .)
    AND             reduce using rule 17 (expression -> expression SQUARE_ROOT .)
    RANDOM          reduce using rule 17 (expression -> expression SQUARE_ROOT .)
    PLUS            reduce using rule 17 (expression -> expression SQUARE_ROOT .)
    FACTORIAL       reduce using rule 17 (expression -> expression SQUARE_ROOT .)
    SQUARE_ROOT     reduce using rule 17 (expression -> expression SQUARE_ROOT .)
    $end            reduce using rule 17 (expression -> expression SQUARE_ROOT .)
    RPAREN          reduce using rule 17 (expression -> expression SQUARE_ROOT .)


state 23

    (13) expression -> MINUS expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    DIVIDE          reduce using rule 13 (expression -> MINUS expression .)
    EXPONENTIATION  reduce using rule 13 (expression -> MINUS expression .)
    MINUS           reduce using rule 13 (expression -> MINUS expression .)
    MODULUS         reduce using rule 13 (expression -> MINUS expression .)
    MULTIPLY        reduce using rule 13 (expression -> MINUS expression .)
    OR              reduce using rule 13 (expression -> MINUS expression .)
    XOR             reduce using rule 13 (expression -> MINUS expression .)
    AND             reduce using rule 13 (expression -> MINUS expression .)
    RANDOM          reduce using rule 13 (expression -> MINUS expression .)
    PLUS            reduce using rule 13 (expression -> MINUS expression .)
    FACTORIAL       reduce using rule 13 (expression -> MINUS expression .)
    SQUARE_ROOT     reduce using rule 13 (expression -> MINUS expression .)
    $end            reduce using rule 13 (expression -> MINUS expression .)
    RPAREN          reduce using rule 13 (expression -> MINUS expression .)

  ! DIVIDE          [ shift and go to state 11 ]
  ! EXPONENTIATION  [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 13 ]
  ! MODULUS         [ shift and go to state 14 ]
  ! MULTIPLY        [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! XOR             [ shift and go to state 17 ]
  ! AND             [ shift and go to state 18 ]
  ! RANDOM          [ shift and go to state 19 ]
  ! PLUS            [ shift and go to state 20 ]
  ! FACTORIAL       [ shift and go to state 21 ]
  ! SQUARE_ROOT     [ shift and go to state 22 ]


state 24

    (21) expression -> ID .

    DIVIDE          reduce using rule 21 (expression -> ID .)
    EXPONENTIATION  reduce using rule 21 (expression -> ID .)
    MINUS           reduce using rule 21 (expression -> ID .)
    MODULUS         reduce using rule 21 (expression -> ID .)
    MULTIPLY        reduce using rule 21 (expression -> ID .)
    OR              reduce using rule 21 (expression -> ID .)
    XOR             reduce using rule 21 (expression -> ID .)
    AND             reduce using rule 21 (expression -> ID .)
    RANDOM          reduce using rule 21 (expression -> ID .)
    PLUS            reduce using rule 21 (expression -> ID .)
    FACTORIAL       reduce using rule 21 (expression -> ID .)
    SQUARE_ROOT     reduce using rule 21 (expression -> ID .)
    $end            reduce using rule 21 (expression -> ID .)
    RPAREN          reduce using rule 21 (expression -> ID .)


state 25

    (14) expression -> PLUS expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    DIVIDE          reduce using rule 14 (expression -> PLUS expression .)
    EXPONENTIATION  reduce using rule 14 (expression -> PLUS expression .)
    MINUS           reduce using rule 14 (expression -> PLUS expression .)
    MODULUS         reduce using rule 14 (expression -> PLUS expression .)
    MULTIPLY        reduce using rule 14 (expression -> PLUS expression .)
    OR              reduce using rule 14 (expression -> PLUS expression .)
    XOR             reduce using rule 14 (expression -> PLUS expression .)
    AND             reduce using rule 14 (expression -> PLUS expression .)
    RANDOM          reduce using rule 14 (expression -> PLUS expression .)
    PLUS            reduce using rule 14 (expression -> PLUS expression .)
    FACTORIAL       reduce using rule 14 (expression -> PLUS expression .)
    SQUARE_ROOT     reduce using rule 14 (expression -> PLUS expression .)
    $end            reduce using rule 14 (expression -> PLUS expression .)
    RPAREN          reduce using rule 14 (expression -> PLUS expression .)

  ! DIVIDE          [ shift and go to state 11 ]
  ! EXPONENTIATION  [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 13 ]
  ! MODULUS         [ shift and go to state 14 ]
  ! MULTIPLY        [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! XOR             [ shift and go to state 17 ]
  ! AND             [ shift and go to state 18 ]
  ! RANDOM          [ shift and go to state 19 ]
  ! PLUS            [ shift and go to state 20 ]
  ! FACTORIAL       [ shift and go to state 21 ]
  ! SQUARE_ROOT     [ shift and go to state 22 ]


state 26

    (15) expression -> NOT expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    DIVIDE          reduce using rule 15 (expression -> NOT expression .)
    EXPONENTIATION  reduce using rule 15 (expression -> NOT expression .)
    MINUS           reduce using rule 15 (expression -> NOT expression .)
    MODULUS         reduce using rule 15 (expression -> NOT expression .)
    MULTIPLY        reduce using rule 15 (expression -> NOT expression .)
    OR              reduce using rule 15 (expression -> NOT expression .)
    XOR             reduce using rule 15 (expression -> NOT expression .)
    AND             reduce using rule 15 (expression -> NOT expression .)
    RANDOM          reduce using rule 15 (expression -> NOT expression .)
    PLUS            reduce using rule 15 (expression -> NOT expression .)
    FACTORIAL       reduce using rule 15 (expression -> NOT expression .)
    SQUARE_ROOT     reduce using rule 15 (expression -> NOT expression .)
    $end            reduce using rule 15 (expression -> NOT expression .)
    RPAREN          reduce using rule 15 (expression -> NOT expression .)

  ! DIVIDE          [ shift and go to state 11 ]
  ! EXPONENTIATION  [ shift and go to state 12 ]
  ! MINUS           [ shift and go to state 13 ]
  ! MODULUS         [ shift and go to state 14 ]
  ! MULTIPLY        [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! XOR             [ shift and go to state 17 ]
  ! AND             [ shift and go to state 18 ]
  ! RANDOM          [ shift and go to state 19 ]
  ! PLUS            [ shift and go to state 20 ]
  ! FACTORIAL       [ shift and go to state 21 ]
  ! SQUARE_ROOT     [ shift and go to state 22 ]


state 27

    (18) expression -> LPAREN expression . RPAREN
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    RPAREN          shift and go to state 39
    DIVIDE          shift and go to state 11
    EXPONENTIATION  shift and go to state 12
    MINUS           shift and go to state 13
    MODULUS         shift and go to state 14
    MULTIPLY        shift and go to state 15
    OR              shift and go to state 16
    XOR             shift and go to state 17
    AND             shift and go to state 18
    RANDOM          shift and go to state 19
    PLUS            shift and go to state 20
    FACTORIAL       shift and go to state 21
    SQUARE_ROOT     shift and go to state 22


state 28

    (1) statement -> ID ASSIGN expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    $end            reduce using rule 1 (statement -> ID ASSIGN expression .)
    DIVIDE          shift and go to state 11
    EXPONENTIATION  shift and go to state 12
    MINUS           shift and go to state 13
    MODULUS         shift and go to state 14
    MULTIPLY        shift and go to state 15
    OR              shift and go to state 16
    XOR             shift and go to state 17
    AND             shift and go to state 18
    RANDOM          shift and go to state 19
    PLUS            shift and go to state 20
    FACTORIAL       shift and go to state 21
    SQUARE_ROOT     shift and go to state 22


state 29

    (3) expression -> expression DIVIDE expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    DIVIDE          reduce using rule 3 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 3 (expression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 3 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 3 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 3 (expression -> expression DIVIDE expression .)
    XOR             reduce using rule 3 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 3 (expression -> expression DIVIDE expression .)
    RANDOM          reduce using rule 3 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 3 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 3 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 3 (expression -> expression DIVIDE expression .)
    EXPONENTIATION  shift and go to state 12
    FACTORIAL       shift and go to state 21
    SQUARE_ROOT     shift and go to state 22

  ! EXPONENTIATION  [ reduce using rule 3 (expression -> expression DIVIDE expression .) ]
  ! FACTORIAL       [ reduce using rule 3 (expression -> expression DIVIDE expression .) ]
  ! SQUARE_ROOT     [ reduce using rule 3 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 13 ]
  ! MODULUS         [ shift and go to state 14 ]
  ! MULTIPLY        [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! XOR             [ shift and go to state 17 ]
  ! AND             [ shift and go to state 18 ]
  ! RANDOM          [ shift and go to state 19 ]
  ! PLUS            [ shift and go to state 20 ]


state 30

    (4) expression -> expression EXPONENTIATION expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    DIVIDE          reduce using rule 4 (expression -> expression EXPONENTIATION expression .)
    MINUS           reduce using rule 4 (expression -> expression EXPONENTIATION expression .)
    MODULUS         reduce using rule 4 (expression -> expression EXPONENTIATION expression .)
    MULTIPLY        reduce using rule 4 (expression -> expression EXPONENTIATION expression .)
    OR              reduce using rule 4 (expression -> expression EXPONENTIATION expression .)
    XOR             reduce using rule 4 (expression -> expression EXPONENTIATION expression .)
    AND             reduce using rule 4 (expression -> expression EXPONENTIATION expression .)
    RANDOM          reduce using rule 4 (expression -> expression EXPONENTIATION expression .)
    PLUS            reduce using rule 4 (expression -> expression EXPONENTIATION expression .)
    $end            reduce using rule 4 (expression -> expression EXPONENTIATION expression .)
    RPAREN          reduce using rule 4 (expression -> expression EXPONENTIATION expression .)
    EXPONENTIATION  shift and go to state 12
    FACTORIAL       shift and go to state 21
    SQUARE_ROOT     shift and go to state 22

  ! EXPONENTIATION  [ reduce using rule 4 (expression -> expression EXPONENTIATION expression .) ]
  ! FACTORIAL       [ reduce using rule 4 (expression -> expression EXPONENTIATION expression .) ]
  ! SQUARE_ROOT     [ reduce using rule 4 (expression -> expression EXPONENTIATION expression .) ]
  ! DIVIDE          [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 13 ]
  ! MODULUS         [ shift and go to state 14 ]
  ! MULTIPLY        [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! XOR             [ shift and go to state 17 ]
  ! AND             [ shift and go to state 18 ]
  ! RANDOM          [ shift and go to state 19 ]
  ! PLUS            [ shift and go to state 20 ]


state 31

    (5) expression -> expression MINUS expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    MINUS           reduce using rule 5 (expression -> expression MINUS expression .)
    OR              reduce using rule 5 (expression -> expression MINUS expression .)
    XOR             reduce using rule 5 (expression -> expression MINUS expression .)
    AND             reduce using rule 5 (expression -> expression MINUS expression .)
    RANDOM          reduce using rule 5 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 5 (expression -> expression MINUS expression .)
    $end            reduce using rule 5 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 5 (expression -> expression MINUS expression .)
    DIVIDE          shift and go to state 11
    EXPONENTIATION  shift and go to state 12
    MODULUS         shift and go to state 14
    MULTIPLY        shift and go to state 15
    FACTORIAL       shift and go to state 21
    SQUARE_ROOT     shift and go to state 22

  ! DIVIDE          [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! EXPONENTIATION  [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! FACTORIAL       [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! SQUARE_ROOT     [ reduce using rule 5 (expression -> expression MINUS expression .) ]
  ! MINUS           [ shift and go to state 13 ]
  ! OR              [ shift and go to state 16 ]
  ! XOR             [ shift and go to state 17 ]
  ! AND             [ shift and go to state 18 ]
  ! RANDOM          [ shift and go to state 19 ]
  ! PLUS            [ shift and go to state 20 ]


state 32

    (6) expression -> expression MODULUS expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    DIVIDE          reduce using rule 6 (expression -> expression MODULUS expression .)
    MINUS           reduce using rule 6 (expression -> expression MODULUS expression .)
    MODULUS         reduce using rule 6 (expression -> expression MODULUS expression .)
    MULTIPLY        reduce using rule 6 (expression -> expression MODULUS expression .)
    OR              reduce using rule 6 (expression -> expression MODULUS expression .)
    XOR             reduce using rule 6 (expression -> expression MODULUS expression .)
    AND             reduce using rule 6 (expression -> expression MODULUS expression .)
    RANDOM          reduce using rule 6 (expression -> expression MODULUS expression .)
    PLUS            reduce using rule 6 (expression -> expression MODULUS expression .)
    $end            reduce using rule 6 (expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 6 (expression -> expression MODULUS expression .)
    EXPONENTIATION  shift and go to state 12
    FACTORIAL       shift and go to state 21
    SQUARE_ROOT     shift and go to state 22

  ! EXPONENTIATION  [ reduce using rule 6 (expression -> expression MODULUS expression .) ]
  ! FACTORIAL       [ reduce using rule 6 (expression -> expression MODULUS expression .) ]
  ! SQUARE_ROOT     [ reduce using rule 6 (expression -> expression MODULUS expression .) ]
  ! DIVIDE          [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 13 ]
  ! MODULUS         [ shift and go to state 14 ]
  ! MULTIPLY        [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! XOR             [ shift and go to state 17 ]
  ! AND             [ shift and go to state 18 ]
  ! RANDOM          [ shift and go to state 19 ]
  ! PLUS            [ shift and go to state 20 ]


state 33

    (7) expression -> expression MULTIPLY expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    DIVIDE          reduce using rule 7 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 7 (expression -> expression MULTIPLY expression .)
    MODULUS         reduce using rule 7 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 7 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 7 (expression -> expression MULTIPLY expression .)
    XOR             reduce using rule 7 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 7 (expression -> expression MULTIPLY expression .)
    RANDOM          reduce using rule 7 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 7 (expression -> expression MULTIPLY expression .)
    $end            reduce using rule 7 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 7 (expression -> expression MULTIPLY expression .)
    EXPONENTIATION  shift and go to state 12
    FACTORIAL       shift and go to state 21
    SQUARE_ROOT     shift and go to state 22

  ! EXPONENTIATION  [ reduce using rule 7 (expression -> expression MULTIPLY expression .) ]
  ! FACTORIAL       [ reduce using rule 7 (expression -> expression MULTIPLY expression .) ]
  ! SQUARE_ROOT     [ reduce using rule 7 (expression -> expression MULTIPLY expression .) ]
  ! DIVIDE          [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 13 ]
  ! MODULUS         [ shift and go to state 14 ]
  ! MULTIPLY        [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! XOR             [ shift and go to state 17 ]
  ! AND             [ shift and go to state 18 ]
  ! RANDOM          [ shift and go to state 19 ]
  ! PLUS            [ shift and go to state 20 ]


state 34

    (8) expression -> expression OR expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    OR              reduce using rule 8 (expression -> expression OR expression .)
    $end            reduce using rule 8 (expression -> expression OR expression .)
    RPAREN          reduce using rule 8 (expression -> expression OR expression .)
    DIVIDE          shift and go to state 11
    EXPONENTIATION  shift and go to state 12
    MINUS           shift and go to state 13
    MODULUS         shift and go to state 14
    MULTIPLY        shift and go to state 15
    XOR             shift and go to state 17
    AND             shift and go to state 18
    RANDOM          shift and go to state 19
    PLUS            shift and go to state 20
    FACTORIAL       shift and go to state 21
    SQUARE_ROOT     shift and go to state 22

  ! DIVIDE          [ reduce using rule 8 (expression -> expression OR expression .) ]
  ! EXPONENTIATION  [ reduce using rule 8 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> expression OR expression .) ]
  ! MODULUS         [ reduce using rule 8 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 8 (expression -> expression OR expression .) ]
  ! XOR             [ reduce using rule 8 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 8 (expression -> expression OR expression .) ]
  ! RANDOM          [ reduce using rule 8 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 8 (expression -> expression OR expression .) ]
  ! FACTORIAL       [ reduce using rule 8 (expression -> expression OR expression .) ]
  ! SQUARE_ROOT     [ reduce using rule 8 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 16 ]


state 35

    (9) expression -> expression XOR expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    OR              reduce using rule 9 (expression -> expression XOR expression .)
    XOR             reduce using rule 9 (expression -> expression XOR expression .)
    AND             reduce using rule 9 (expression -> expression XOR expression .)
    $end            reduce using rule 9 (expression -> expression XOR expression .)
    RPAREN          reduce using rule 9 (expression -> expression XOR expression .)
    DIVIDE          shift and go to state 11
    EXPONENTIATION  shift and go to state 12
    MINUS           shift and go to state 13
    MODULUS         shift and go to state 14
    MULTIPLY        shift and go to state 15
    RANDOM          shift and go to state 19
    PLUS            shift and go to state 20
    FACTORIAL       shift and go to state 21
    SQUARE_ROOT     shift and go to state 22

  ! DIVIDE          [ reduce using rule 9 (expression -> expression XOR expression .) ]
  ! EXPONENTIATION  [ reduce using rule 9 (expression -> expression XOR expression .) ]
  ! MINUS           [ reduce using rule 9 (expression -> expression XOR expression .) ]
  ! MODULUS         [ reduce using rule 9 (expression -> expression XOR expression .) ]
  ! MULTIPLY        [ reduce using rule 9 (expression -> expression XOR expression .) ]
  ! RANDOM          [ reduce using rule 9 (expression -> expression XOR expression .) ]
  ! PLUS            [ reduce using rule 9 (expression -> expression XOR expression .) ]
  ! FACTORIAL       [ reduce using rule 9 (expression -> expression XOR expression .) ]
  ! SQUARE_ROOT     [ reduce using rule 9 (expression -> expression XOR expression .) ]
  ! OR              [ shift and go to state 16 ]
  ! XOR             [ shift and go to state 17 ]
  ! AND             [ shift and go to state 18 ]


state 36

    (10) expression -> expression AND expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    OR              reduce using rule 10 (expression -> expression AND expression .)
    AND             reduce using rule 10 (expression -> expression AND expression .)
    $end            reduce using rule 10 (expression -> expression AND expression .)
    RPAREN          reduce using rule 10 (expression -> expression AND expression .)
    DIVIDE          shift and go to state 11
    EXPONENTIATION  shift and go to state 12
    MINUS           shift and go to state 13
    MODULUS         shift and go to state 14
    MULTIPLY        shift and go to state 15
    XOR             shift and go to state 17
    RANDOM          shift and go to state 19
    PLUS            shift and go to state 20
    FACTORIAL       shift and go to state 21
    SQUARE_ROOT     shift and go to state 22

  ! DIVIDE          [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! EXPONENTIATION  [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! MODULUS         [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! XOR             [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! RANDOM          [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! FACTORIAL       [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! SQUARE_ROOT     [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 16 ]
  ! AND             [ shift and go to state 18 ]


state 37

    (11) expression -> expression RANDOM expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    OR              reduce using rule 11 (expression -> expression RANDOM expression .)
    XOR             reduce using rule 11 (expression -> expression RANDOM expression .)
    AND             reduce using rule 11 (expression -> expression RANDOM expression .)
    RANDOM          reduce using rule 11 (expression -> expression RANDOM expression .)
    $end            reduce using rule 11 (expression -> expression RANDOM expression .)
    RPAREN          reduce using rule 11 (expression -> expression RANDOM expression .)
    DIVIDE          shift and go to state 11
    EXPONENTIATION  shift and go to state 12
    MINUS           shift and go to state 13
    MODULUS         shift and go to state 14
    MULTIPLY        shift and go to state 15
    PLUS            shift and go to state 20
    FACTORIAL       shift and go to state 21
    SQUARE_ROOT     shift and go to state 22

  ! DIVIDE          [ reduce using rule 11 (expression -> expression RANDOM expression .) ]
  ! EXPONENTIATION  [ reduce using rule 11 (expression -> expression RANDOM expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> expression RANDOM expression .) ]
  ! MODULUS         [ reduce using rule 11 (expression -> expression RANDOM expression .) ]
  ! MULTIPLY        [ reduce using rule 11 (expression -> expression RANDOM expression .) ]
  ! PLUS            [ reduce using rule 11 (expression -> expression RANDOM expression .) ]
  ! FACTORIAL       [ reduce using rule 11 (expression -> expression RANDOM expression .) ]
  ! SQUARE_ROOT     [ reduce using rule 11 (expression -> expression RANDOM expression .) ]
  ! OR              [ shift and go to state 16 ]
  ! XOR             [ shift and go to state 17 ]
  ! AND             [ shift and go to state 18 ]
  ! RANDOM          [ shift and go to state 19 ]


state 38

    (12) expression -> expression PLUS expression .
    (3) expression -> expression . DIVIDE expression
    (4) expression -> expression . EXPONENTIATION expression
    (5) expression -> expression . MINUS expression
    (6) expression -> expression . MODULUS expression
    (7) expression -> expression . MULTIPLY expression
    (8) expression -> expression . OR expression
    (9) expression -> expression . XOR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . RANDOM expression
    (12) expression -> expression . PLUS expression
    (16) expression -> expression . FACTORIAL
    (17) expression -> expression . SQUARE_ROOT

    MINUS           reduce using rule 12 (expression -> expression PLUS expression .)
    OR              reduce using rule 12 (expression -> expression PLUS expression .)
    XOR             reduce using rule 12 (expression -> expression PLUS expression .)
    AND             reduce using rule 12 (expression -> expression PLUS expression .)
    RANDOM          reduce using rule 12 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 12 (expression -> expression PLUS expression .)
    $end            reduce using rule 12 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 12 (expression -> expression PLUS expression .)
    DIVIDE          shift and go to state 11
    EXPONENTIATION  shift and go to state 12
    MODULUS         shift and go to state 14
    MULTIPLY        shift and go to state 15
    FACTORIAL       shift and go to state 21
    SQUARE_ROOT     shift and go to state 22

  ! DIVIDE          [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! EXPONENTIATION  [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! MULTIPLY        [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! FACTORIAL       [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! SQUARE_ROOT     [ reduce using rule 12 (expression -> expression PLUS expression .) ]
  ! MINUS           [ shift and go to state 13 ]
  ! OR              [ shift and go to state 16 ]
  ! XOR             [ shift and go to state 17 ]
  ! AND             [ shift and go to state 18 ]
  ! RANDOM          [ shift and go to state 19 ]
  ! PLUS            [ shift and go to state 20 ]


state 39

    (18) expression -> LPAREN expression RPAREN .

    DIVIDE          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    EXPONENTIATION  reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    RANDOM          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    FACTORIAL       reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    SQUARE_ROOT     reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (expression -> LPAREN expression RPAREN .)

